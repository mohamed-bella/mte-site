<%- include('../partials/admin/header') %>

<div class="min-h-screen bg-gray-50">
  <%- include('../partials/admin/sidebar') %>
  
  <div class="md:pl-64 flex flex-col flex-1">
    <div class="sticky top-0 z-10 md:hidden pl-1 pt-1 sm:pl-3 sm:pt-3 bg-gray-50">
      <button id="sidebarToggle" class="h-12 w-12 inline-flex items-center justify-center rounded-md text-gray-500 hover:text-gray-900">
        <i class="fas fa-bars"></i>
      </button>
    </div>
    
    <main class="flex-1 py-6">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 md:px-8">
        <!-- Page Header with Search and Filter -->
        <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
          <div class="flex-1 min-w-0">
            <h1 class="text-2xl font-bold text-gray-900 sm:truncate">
              Manage Excursions
            </h1>
            <p class="mt-1 text-sm text-gray-500">
              Create, edit and manage your day trips and excursions
            </p>
          </div>
          <div class="mt-4 md:mt-0 md:ml-4 flex items-center space-x-3">
            <div class="relative">
              <input type="text" id="excursionSearch" placeholder="Search excursions..." 
                class="shadow-sm focus:ring-orange-500 focus:border-orange-500 block w-full pr-10 sm:text-sm border-gray-300 rounded-md">
              <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                <i class="fas fa-search text-gray-400"></i>
              </div>
            </div>
            <a href="/admin/excursions/add" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500">
              <i class="fas fa-plus mr-2"></i>
              Add Excursion
            </a>
          </div>
        </div>
        
        <!-- Filter Options -->
        <div class="bg-white shadow rounded-lg mb-6 overflow-hidden">
          <div class="p-4">
            <div class="flex flex-wrap md:flex-nowrap items-center gap-4">
              <div class="w-full md:w-auto">
                <label for="sortBy" class="block text-sm font-medium text-gray-700">Sort By</label>
                <select id="sortBy" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-orange-500 focus:border-orange-500 sm:text-sm rounded-md">
                  <option value="newest">Newest</option>
                  <option value="title">Title (A-Z)</option>
                  <option value="price-asc">Price (Low to High)</option>
                  <option value="price-desc">Price (High to Low)</option>
                </select>
              </div>
              <div class="w-full md:w-auto">
                <label for="filterFeatured" class="block text-sm font-medium text-gray-700">Featured</label>
                <select id="filterFeatured" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-orange-500 focus:border-orange-500 sm:text-sm rounded-md">
                  <option value="all">All Excursions</option>
                  <option value="featured">Featured Only</option>
                  <option value="not-featured">Not Featured</option>
                </select>
              </div>
              <div class="w-full md:w-auto">
                <label for="filterLocation" class="block text-sm font-medium text-gray-700">Location</label>
                <select id="filterLocation" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-orange-500 focus:border-orange-500 sm:text-sm rounded-md">
                  <option value="all">All Locations</option>
                  <% 
                    // Create a unique list of locations from the excursions
                    if (excursions && excursions.length > 0) {
                      const locations = [...new Set(excursions.map(e => e.location))];
                      locations.forEach(location => {
                  %>
                    <option value="<%= location %>"><%= location %></option>
                  <% }); } %>
                </select>
              </div>
              <div class="w-full md:w-auto md:ml-auto">
                <button id="clearFilters" class="mt-6 inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500">
                  <i class="fas fa-times mr-2"></i>
                  Clear Filters
                </button>
              </div>
            </div>
          </div>
        </div>
        
        <% if (excursions && excursions.length > 0) { %>
          <!-- Excursions Grid -->
          <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3 mb-8">
            <% excursions.forEach(excursion => { %>
              <div class="excursion-card bg-white shadow rounded-lg overflow-hidden" 
                   data-title="<%= excursion.title.toLowerCase() %>"
                   data-featured="<%= excursion.featured ? 'true' : 'false' %>"
                   data-location="<%= excursion.location %>"
                   data-price="<%= excursion.adultPrice %>">
                
                <div class="relative">
                  <!-- Excursion Image -->
                  <img src="<%= excursion.mainImage %>" alt="<%= excursion.title %>" 
                       class="h-48 w-full object-cover">
                  
                  <!-- Featured Badge -->
                  <% if (excursion.featured) { %>
                    <div class="absolute top-0 right-0 mt-2 mr-2">
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-md bg-yellow-100 text-yellow-800">
                        <i class="fas fa-star mr-1 text-yellow-500"></i>
                        Featured
                      </span>
                    </div>
                  <% } %>
                  
                  <!-- Quick Actions Overlay -->
                  <div class="absolute inset-0 bg-black bg-opacity-25 flex items-center justify-center opacity-0 hover:opacity-100 transition-opacity duration-200">
                    <div class="flex space-x-2">
                      <a href="/excursions/<%= excursion.slug %>" target="_blank" 
                         class="bg-gray-800 bg-opacity-75 hover:bg-opacity-90 text-white p-2 rounded-full">
                        <i class="fas fa-eye"></i>
                      </a>
                      <a href="/admin/excursions/edit/<%= excursion._id %>" 
                         class="bg-blue-600 bg-opacity-75 hover:bg-opacity-90 text-white p-2 rounded-full">
                        <i class="fas fa-edit"></i>
                      </a>
                      <button onclick="confirmDelete('<%= excursion._id %>', '<%= excursion.title %>')" 
                              class="bg-red-600 bg-opacity-75 hover:bg-opacity-90 text-white p-2 rounded-full">
                        <i class="fas fa-trash"></i>
                      </button>
                    </div>
                  </div>
                </div>
                
                <div class="p-4">
                  <div class="flex justify-between items-start">
                    <h3 class="text-lg font-semibold text-gray-900 mb-1 truncate"><%= excursion.title %></h3>
                    <span class="text-sm font-medium text-white bg-green-500 px-2 py-1 rounded">
                      <%= excursion.currency %> <%= excursion.adultPrice %>
                    </span>
                  </div>
                  
                  <div class="flex items-center text-sm text-gray-500 mb-2">
                    <i class="fas fa-map-marker-alt mr-1 text-gray-400"></i>
                    <%= excursion.location %>
                  </div>
                  
                  <div class="flex items-center text-sm text-gray-500 mb-2">
                    <i class="fas fa-clock mr-1 text-gray-400"></i>
                    <%= excursion.startTime %> - <%= excursion.endTime %>
                  </div>
                  
                  <div class="border-t border-gray-200 mt-3 pt-3 flex justify-between">
                    <div class="text-sm">
                      <span class="text-gray-500">Adult: </span>
                      <span class="font-medium"><%= excursion.currency %> <%= excursion.adultPrice %></span>
                    </div>
                    <div class="text-sm">
                      <span class="text-gray-500">Child: </span>
                      <span class="font-medium"><%= excursion.currency %> <%= excursion.childPrice %></span>
                    </div>
                  </div>
                </div>
                
                <div class="bg-gray-50 px-4 py-3 sm:px-6 flex justify-between">
                  <a href="/admin/excursions/edit/<%= excursion._id %>" 
                     class="inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500">
                    Edit Details
                  </a>
                  <div class="flex space-x-1">
                    <form action="/admin/excursions/toggle-featured/<%= excursion._id %>" method="POST" class="inline">
                      <button type="submit" class="inline-flex items-center px-2 py-1 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500">
                        <% if (excursion.featured) { %>
                          <i class="fas fa-star text-yellow-500 mr-1"></i>
                          Unfeature
                        <% } else { %>
                          <i class="far fa-star mr-1"></i>
                          Feature
                        <% } %>
                      </button>
                    </form>
                  </div>
                </div>
              </div>
            <% }); %>
          </div>
        <% } else { %>
          <!-- No Excursions Display -->
          <div class="bg-white shadow sm:rounded-lg p-6 text-center">
            <div class="mx-auto h-24 w-24 text-gray-400 mb-6">
              <i class="fas fa-hiking text-6xl"></i>
            </div>
            <h3 class="text-lg font-medium text-gray-900">No excursions found</h3>
            <p class="mt-2 text-sm text-gray-500">
              Get started by creating your first excursion or day trip.
            </p>
            <div class="mt-6">
              <a href="/admin/excursions/add" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500">
                <i class="fas fa-plus mr-2"></i>
                Create Excursion
              </a>
            </div>
          </div>
        <% } %>
      </div>
    </main>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="hidden fixed z-10 inset-0 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
  <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
      <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
            <i class="fas fa-exclamation-triangle text-red-600"></i>
          </div>
          <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
            <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">
              Delete Excursion
            </h3>
            <div class="mt-2">
              <p class="text-sm text-gray-500" id="deleteMessage">
                Are you sure you want to delete this excursion? This action cannot be undone.
              </p>
            </div>
          </div>
        </div>
      </div>
      <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <form id="deleteForm" action="" method="POST">
          <button type="submit" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm">
            Delete
          </button>
        </form>
        <button type="button" id="cancelDelete" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
          Cancel
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Delete confirmation modal functionality
    const deleteModal = document.getElementById('deleteModal');
    const deleteForm = document.getElementById('deleteForm');
    const deleteMessage = document.getElementById('deleteMessage');
    const cancelDelete = document.getElementById('cancelDelete');
    
    // Close modal when clicking cancel
    cancelDelete.addEventListener('click', function() {
      deleteModal.classList.add('hidden');
    });
    
    // Search and filter functionality
    const excursionSearch = document.getElementById('excursionSearch');
    const sortBy = document.getElementById('sortBy');
    const filterFeatured = document.getElementById('filterFeatured');
    const filterLocation = document.getElementById('filterLocation');
    const clearFilters = document.getElementById('clearFilters');
    const excursionCards = document.querySelectorAll('.excursion-card');
    
    // Search function
    excursionSearch.addEventListener('input', filterExcursions);
    sortBy.addEventListener('change', filterExcursions);
    filterFeatured.addEventListener('change', filterExcursions);
    filterLocation.addEventListener('change', filterExcursions);
    
    // Clear filters
    clearFilters.addEventListener('click', function() {
      excursionSearch.value = '';
      sortBy.value = 'newest';
      filterFeatured.value = 'all';
      filterLocation.value = 'all';
      filterExcursions();
    });
    
    function filterExcursions() {
      const searchValue = excursionSearch.value.toLowerCase();
      const featuredValue = filterFeatured.value;
      const locationValue = filterLocation.value;
      
      // First filter cards based on search and filter criteria
      excursionCards.forEach(card => {
        const title = card.dataset.title;
        const featured = card.dataset.featured;
        const location = card.dataset.location;
        
        // Check if card matches all criteria
        const matchesSearch = title.includes(searchValue);
        const matchesFeatured = featuredValue === 'all' || 
                              (featuredValue === 'featured' && featured === 'true') || 
                              (featuredValue === 'not-featured' && featured === 'false');
        const matchesLocation = locationValue === 'all' || location === locationValue;
        
        // Show/hide based on matches
        if (matchesSearch && matchesFeatured && matchesLocation) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
      
      // Then sort visible cards
      const visibleCards = Array.from(excursionCards).filter(card => card.style.display !== 'none');
      const sortValue = sortBy.value;
      
      const sortedCards = visibleCards.sort((a, b) => {
        if (sortValue === 'title') {
          return a.dataset.title.localeCompare(b.dataset.title);
        } else if (sortValue === 'price-asc') {
          return parseFloat(a.dataset.price) - parseFloat(b.dataset.price);
        } else if (sortValue === 'price-desc') {
          return parseFloat(b.dataset.price) - parseFloat(a.dataset.price);
        }
        // Default to newest (could use created date if available)
        return 0;
      });
      
      // Reorder cards in the DOM
      const parent = document.querySelector('.grid');
      sortedCards.forEach(card => {
        parent.appendChild(card);
      });
    }
  });
  
  // Delete confirmation function
  function confirmDelete(id, title) {
    const deleteModal = document.getElementById('deleteModal');
    const deleteForm = document.getElementById('deleteForm');
    const deleteMessage = document.getElementById('deleteMessage');
    
    deleteForm.action = `/admin/excursions/delete/${id}`;
    deleteMessage.textContent = `Are you sure you want to delete "${title}"? This action cannot be undone.`;
    deleteModal.classList.remove('hidden');
  }
</script>

<%- include('../partials/admin/footer') %> 