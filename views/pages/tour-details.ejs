<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <%- include('../partials/head', { 
        title: `${tour.title} | Morocco Travel Experts`,
        metaDescription: `Experience ${tour.title}. ${tour.duration} days from ${tour.startLocation}. Book now!`,
        metaKeywords: `morocco tours, ${tour.startLocation} tours, morocco travel, ${tour.duration} day tours, ${tour.title}`,
        canonicalUrl: `https://moroccotravelexperts.com/tours/${tour.slug}`,
        ogImage: tour.mainImage,
        ogImageAlt: `${tour.title} - Experience Morocco Travel`,
        ogType: 'product',
        price: tour.price,
        currency: 'USD',
        availability: 'instock',
        tourDuration: tour.duration
    }) %>
    
    <!-- Essential CSS -->
    <link href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css" rel="stylesheet">
    
    <style>
        html {
            scroll-behavior: smooth;
            scroll-padding-top: 70px;
        }
        .hide-scrollbar {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }
        .hide-scrollbar::-webkit-scrollbar {
            display: none;
        }
        details > summary {
            list-style: none;
        }
        details > summary::-webkit-details-marker {
            display: none;
        }
        details[open] summary svg {
            transform: rotate(180deg);
        }
        @media (max-width: 768px) {
            #booking {
                padding-bottom: 5rem;
            }
        }
        .pb-safe {
            padding-bottom: env(safe-area-inset-bottom, 1rem);
        }
    </style>
</head>

<body class="bg-gray-50">
    <%- include('../partials/header') %>

    <!-- Clean Hero Section -->
    <section class="relative h-[60vh] flex items-center">
        <div class="absolute inset-0 bg-cover bg-center" style="background-image: url('<%= tour.mainImage %>');"></div>
        <div class="absolute inset-0 bg-black/30"></div>
        
        <div class="container mx-auto px-4 relative z-10 text-white">
            <div class="max-w-3xl">
                <h1 class="text-3xl md:text-5xl font-bold mb-4"><%= tour.title %></h1>
                <div class="flex flex-wrap gap-4 mb-6">
                    <span class="flex items-center gap-2"><i class="fas fa-clock"></i> <%= tour.duration %> Days</span>
                    <span class="flex items-center gap-2"><i class="fas fa-map-marker-alt"></i> <%= tour.startLocation %></span>
                    <span class="flex items-center gap-2"><i class="fas fa-star"></i> <%= tour.rating %>/5</span>
                </div>
                <a href="#booking" class="inline-block px-6 py-3 bg-orange-500 rounded-lg font-medium shadow-lg hover:bg-orange-600 transition-colors">Book This Tour</a>
            </div>
        </div>
    </section>

    <!-- Simple Navigation -->
    <div class="sticky top-0 bg-white shadow-sm z-30 border-b">
        <div class="container mx-auto px-4">
            <div class="flex overflow-x-auto hide-scrollbar py-3 gap-6">
                <a href="#overview" class="nav-link whitespace-nowrap text-gray-600 hover:text-orange-500">Overview</a>
                <a href="#itinerary" class="nav-link whitespace-nowrap text-gray-600 hover:text-orange-500">Itinerary</a>
                <a href="#gallery" class="nav-link whitespace-nowrap text-gray-600 hover:text-orange-500">Gallery</a>
                <a href="#details" class="nav-link whitespace-nowrap text-gray-600 hover:text-orange-500">Details</a>
                <a href="#booking" class="nav-link whitespace-nowrap text-gray-600 hover:text-orange-500">Book</a>
            </div>
        </div>
    </div>

    <!-- Overview Section -->
    <section id="overview" class="py-12 bg-white">
        <div class="container mx-auto px-4">
            <h2 class="text-2xl md:text-3xl font-bold mb-8">Tour Overview</h2>
            
            <!-- Key highlights -->
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-10">
                <div class="bg-orange-50 rounded-lg p-4 text-center">
                    <div class="text-orange-600 mb-1"><i class="fas fa-clock text-2xl"></i></div>
                    <div class="font-bold"><%= tour.duration %> Days</div>
                    <div class="text-sm text-gray-600">Duration</div>
                </div>
                <div class="bg-orange-50 rounded-lg p-4 text-center">
                    <div class="text-orange-600 mb-1"><i class="fas fa-map-marker-alt text-2xl"></i></div>
                    <div class="font-bold"><%= tour.startLocation %></div>
                    <div class="text-sm text-gray-600">Starting Point</div>
                </div>
                <div class="bg-orange-50 rounded-lg p-4 text-center">
                    <div class="text-orange-600 mb-1"><i class="fas fa-users text-2xl"></i></div>
                    <div class="font-bold">Max <%= tour.groupSize %></div>
                    <div class="text-sm text-gray-600">Group Size</div>
                </div>
                <div class="bg-orange-50 rounded-lg p-4 text-center">
                    <div class="text-orange-600 mb-1"><i class="fas fa-star text-2xl"></i></div>
                    <div class="font-bold"><%= tour.rating %>/5</div>
                    <div class="text-sm text-gray-600">Rating</div>
                </div>
            </div>
            
            <div class="grid md:grid-cols-3 gap-8">
                <!-- Left: Description with styled highlights -->
                <div class="md:col-span-2">
                    <div class="prose max-w-none mb-6">
                        <%= tour.description %>
                    </div>
                    
                    <!-- Tour highlights -->
                    <div class="bg-gray-50 p-6 rounded-lg border border-gray-100 mt-8">
                        <h3 class="font-bold text-xl mb-4">Tour Highlights</h3>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
                            <% const highlightsArray = tour.highlights || ['Authentic local experiences', 'Expert guides', 'Comfortable transport', 'Unique accommodations']; %>
                            <% highlightsArray.forEach(highlight => { %>
                            <div class="flex items-start gap-2">
                                <svg class="w-5 h-5 text-orange-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                <span><%= highlight %></span>
                            </div>
                            <% }) %>
                        </div>
                    </div>
                </div>
                
                <!-- Right: Booking info -->
                <div class="space-y-6">
                    <!-- Price box -->
                    <div class="bg-white shadow-md rounded-lg border border-gray-200 overflow-hidden">
                        <div class="bg-orange-500 text-white p-4">
                            <div class="text-xl font-bold">Tour Price</div>
                        </div>
                        <div class="p-6">
                            <div class="text-3xl font-bold text-orange-600 mb-2">$<%= tour.price %></div>
                            <p class="text-sm text-gray-600 mb-4">per person</p>
                            <a href="#booking" class="block text-center bg-orange-500 hover:bg-orange-600 text-white py-3 rounded-lg transition-colors">
                                Book Now
                            </a>
                        </div>
                    </div>
                    
                    <!-- What's included -->
                    <div class="bg-white rounded-lg p-6 border border-gray-200 shadow-sm">
                        <h3 class="font-bold mb-4 flex items-center gap-2">
                            <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            What's Included
                        </h3>
                        <ul class="space-y-2">
                            <% tour.includes.slice(0, 5).forEach(item => { %>
                            <li class="flex items-start gap-2 text-sm">
                                <svg class="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                                <span><%= item %></span>
                            </li>
                            <% }) %>
                            <% if (tour.includes.length > 5) { %>
                            <li class="text-sm text-orange-500 mt-2">+ <%= tour.includes.length - 5 %> more included</li>
                            <% } %>
                        </ul>
                    </div>
                    
                    <!-- What's not included -->
                    <div class="bg-white rounded-lg p-6 border border-gray-200 shadow-sm">
                        <h3 class="font-bold mb-4 flex items-center gap-2">
                            <svg class="w-5 h-5 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            What's Not Included
                        </h3>
                        <ul class="space-y-2">
                            <% tour.excludes.slice(0, 3).forEach(item => { %>
                            <li class="flex items-start gap-2 text-sm">
                                <svg class="w-5 h-5 text-red-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                                <span><%= item %></span>
                            </li>
                            <% }) %>
                            <% if (tour.excludes.length > 3) { %>
                            <li class="text-sm text-red-500 mt-2">+ <%= tour.excludes.length - 3 %> more not included</li>
                            <% } %>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Map Section (if available) -->
    <% if (tour.mapImage) { %>
    <section class="py-8 bg-gray-50">
        <div class="container mx-auto px-4">
            <div class="max-w-4xl mx-auto">
                <h3 class="text-xl font-bold mb-4">Tour Route</h3>
                <div class="rounded-lg overflow-hidden shadow-sm">
                    <img src="<%= tour.mapImage %>" 
                         alt="Tour route map for <%= tour.title %>" 
                         class="w-full h-auto">
                </div>
            </div>
        </div>
    </section>
    <% } %>

    <!-- Itinerary Section -->
    <section id="itinerary" class="py-12 bg-white">
        <div class="container mx-auto px-4">
            <h2 class="text-2xl md:text-3xl font-bold mb-6">Daily Itinerary</h2>
            
            <div class="max-w-3xl mx-auto space-y-4">
                <% tour.itinerary.forEach((day, index) => { %>
                <details class="bg-white rounded-lg p-6 shadow-sm hover:shadow transition">
                    <summary class="flex justify-between items-center cursor-pointer">
                        <h3 class="font-bold">Day <%= day.day %>: <%= day.title %></h3>
                        <svg class="w-5 h-5 text-gray-400 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                        </svg>
                    </summary>
                    <div class="pt-4 text-gray-600">
                        <p><%= day.description %></p>
                        
                        <% if (day.highlights && day.highlights.length > 0) { %>
                        <div class="mt-4">
                            <h4 class="font-medium mb-2">Highlights:</h4>
                            <div class="flex flex-wrap gap-2">
                                <% day.highlights.forEach(highlight => { %>
                                <span class="px-2 py-1 bg-orange-50 text-orange-700 rounded text-sm">
                                    <%= highlight %>
                                </span>
                                <% }) %>
                            </div>
                        </div>
                        <% } %>
                    </div>
                </details>
                <% }) %>
            </div>
        </div>
    </section>

    <!-- Gallery Section -->
    <section id="gallery" class="py-12 bg-gray-50">
        <div class="container mx-auto px-4">
            <h2 class="text-2xl md:text-3xl font-bold mb-6">Tour Gallery</h2>
            
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                <% if (tour.images && tour.images.length) { %>
                <% tour.images.slice(0, 8).forEach((image, index) => { %>
                <a href="<%= image %>" 
                   data-lightbox="tour-gallery" 
                   data-title="<%= tour.title %> - View <%= index + 1 %>"
                   class="block aspect-square overflow-hidden rounded-lg hover:opacity-90 transition">
                    <img src="<%= image %>" 
                         alt="<%= tour.title %> - View <%= index + 1 %>"
                         class="w-full h-full object-cover">
                </a>
                <% }) %>
                <% } else if (tour.gallery && tour.gallery.length) { %>
                <% tour.gallery.slice(0, 8).forEach((image, index) => { %>
                <a href="<%= image %>" 
                   data-lightbox="tour-gallery" 
                   data-title="<%= tour.title %> - View <%= index + 1 %>"
                   class="block aspect-square overflow-hidden rounded-lg hover:opacity-90 transition">
                    <img src="<%= image %>" 
                         alt="<%= tour.title %> - View <%= index + 1 %>"
                         class="w-full h-full object-cover">
                </a>
                <% }) %>
                <% } else { %>
                <div class="col-span-full text-center py-12 text-gray-500">
                    No gallery images available for this tour
                </div>
                <% } %>
            </div>
            
            <% if ((tour.images && tour.images.length > 8) || (tour.gallery && tour.gallery.length > 8)) { %>
            <div class="text-center mt-6">
                <button onclick="showAllPhotos()" class="px-6 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors">
                    View All Photos
                </button>
            </div>
            <% } %>
        </div>
    </section>

    <!-- Details Section -->
    <section id="details" class="py-12 bg-white">
        <div class="container mx-auto px-4">
            <h2 class="text-2xl md:text-3xl font-bold mb-6">Tour Details</h2>
            
            <div class="max-w-3xl mx-auto bg-white rounded-lg p-6 shadow-sm border border-gray-100">
                <div class="grid md:grid-cols-2 gap-6">
                    <div class="space-y-4">
                        <div>
                            <h3 class="text-sm text-gray-500">Duration</h3>
                            <p class="font-medium"><%= tour.duration %> Days</p>
                        </div>
                        <div>
                            <h3 class="text-sm text-gray-500">Starting Point</h3>
                            <p class="font-medium"><%= tour.startLocation %></p>
                        </div>
                        <div>
                            <h3 class="text-sm text-gray-500">Group Size</h3>
                            <p class="font-medium">Maximum <%= tour.groupSize %> people</p>
                        </div>
                    </div>
                    <div class="space-y-4">
                        <div>
                            <h3 class="text-sm text-gray-500">Accommodation</h3>
                            <p class="font-medium"><%= tour.accommodation %></p>
                        </div>
                        <div>
                            <h3 class="text-sm text-gray-500">Transportation</h3>
                            <p class="font-medium">Private vehicle with A/C</p>
                        </div>
                        <div>
                            <h3 class="text-sm text-gray-500">Languages</h3>
                            <p class="font-medium">English, French, Arabic</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Booking Section -->
    <section id="booking" class="py-12 bg-gray-50 pb-32 md:pb-16">
        <div class="container mx-auto px-4">
            <h2 class="text-2xl md:text-3xl font-bold mb-6">Book Your Tour</h2>
            
            <div class="max-w-3xl mx-auto">
                <!-- Booking Form Card -->
                <div id="booking-form-container" class="bg-white rounded-lg shadow-md p-6 border border-gray-200">
                    <h3 class="text-xl font-bold mb-4">Book This Tour</h3>
                    <form id="booking-form" class="space-y-4">
                        <input type="hidden" name="tourId" value="<%= tour._id %>">
                        <input type="hidden" name="tourName" value="<%= tour.title %>">
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label for="firstName" class="block text-sm font-medium text-gray-700 mb-1">First Name*</label>
                                <input type="text" id="firstName" name="firstName" required
                                      class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-orange-500/30 focus:border-orange-500">
                            </div>
                            <div>
                                <label for="lastName" class="block text-sm font-medium text-gray-700 mb-1">Last Name*</label>
                                <input type="text" id="lastName" name="lastName" required
                                      class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-orange-500/30 focus:border-orange-500">
                            </div>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email*</label>
                                <input type="email" id="email" name="email" required
                                      class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-orange-500/30 focus:border-orange-500">
                            </div>
                            <div>
                                <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Phone Number*</label>
                                <input type="tel" id="phone" name="phone" required
                                      class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-orange-500/30 focus:border-orange-500">
                            </div>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label for="startDate" class="block text-sm font-medium text-gray-700 mb-1">Travel Date*</label>
                                <input type="date" id="startDate" name="startDate" required
                                      min="<%= new Date().toISOString().split('T')[0] %>"
                                      class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-orange-500/30 focus:border-orange-500">
                            </div>
                            <div>
                                <label for="groupSize" class="block text-sm font-medium text-gray-700 mb-1">Number of Guests*</label>
                                <input type="number" id="groupSize" name="groupSize" required min="1" max="<%= tour.groupSize %>" value="1"
                                      class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-orange-500/30 focus:border-orange-500">
                            </div>
                        </div>
                        
                        <!-- Price calculation section -->
                        <div class="bg-gray-50 p-4 rounded-lg border border-gray-200 mt-2">
                            <div class="flex justify-between items-center mb-1">
                                <span class="text-sm text-gray-600">Base price per person:</span>
                                <span class="text-sm font-medium" id="base-price">$<%= tour.price %></span>
                            </div>
                            
                            <div class="flex justify-between items-center mb-1" id="discount-container" style="display: none;">
                                <span class="text-sm text-green-600">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 inline-block mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" />
                                    </svg>
                                    Group discount:
                                </span>
                                <span class="text-sm font-medium text-green-600" id="discount-amount">-$0</span>
                            </div>
                            
                            <div class="h-px bg-gray-200 my-2"></div>
                            
                            <div class="flex justify-between items-center">
                                <span class="font-medium">Final price:</span>
                                <span class="font-bold text-lg text-orange-600" id="total-price">$<%= tour.price %></span>
                            </div>
                            
                            <input type="hidden" id="calculated-price" name="calculatedPrice" value="<%= tour.price %>">
                            <p class="text-xs text-gray-500 mt-2">*Save up to 9% per person with group bookings!</p>
                        </div>
                        
                        <div>
                            <label for="specialRequests" class="block text-sm font-medium text-gray-700 mb-1">Additional Requests</label>
                            <textarea id="specialRequests" name="specialRequests" rows="3"
                                     class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-orange-500/30 focus:border-orange-500"></textarea>
                        </div>
                        
                        <div class="flex items-center justify-between flex-wrap gap-4">
                            <div class="flex items-center">
                                <input type="checkbox" id="terms" name="terms" required
                                      class="w-4 h-4 text-orange-500 focus:ring-orange-500 border-gray-300 rounded">
                                <label for="terms" class="ml-2 text-sm text-gray-600">
                                    I agree to the <a href="/terms" class="text-orange-500 hover:underline">Terms & Conditions</a>
                                </label>
                            </div>
                            <button type="submit" id="booking-submit-btn" class="px-6 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-lg transition-colors font-medium">
                                Book Now
                            </button>
                        </div>
                        
                        <!-- Success message container (hidden by default) -->
                        <div id="booking-success" class="hidden mt-4 p-4 bg-green-50 text-green-800 rounded-lg border border-green-200">
                            <div class="flex">
                                <svg class="w-5 h-5 mr-2 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                                <span id="booking-success-message">Your booking has been submitted successfully!</span>
                            </div>
                        </div>
                        
                        <!-- Error message container (hidden by default) -->
                        <div id="booking-error" class="hidden mt-4 p-4 bg-red-50 text-red-800 rounded-lg border border-red-200">
                            <div class="flex">
                                <svg class="w-5 h-5 mr-2 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>
                                </svg>
                                <span id="booking-error-message">An error occurred. Please try again.</span>
                            </div>
                        </div>
                    </form>
                </div>
                
                <!-- Option to customize -->
                <div class="mt-6">
                    <div class="bg-orange-50 p-4 rounded-lg border border-orange-100 shadow-sm">
                        <p class="text-gray-700 font-medium mb-3 text-center">Want to customize this tour?</p>
                        <button onclick="window.openCustomizeModal()" class="w-full py-3 px-4 bg-orange-500 hover:bg-orange-600 text-white font-medium rounded-lg flex items-center justify-center gap-2 transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                            </svg>
                            Contact us for a personalized itinerary
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Mobile Booking Bar -->
    <div class="md:hidden fixed bottom-0 left-0 right-0 bg-white border-t shadow-lg z-30 pb-safe">
        <div class="flex p-3 gap-2">
            <div class="text-center flex-1">
                <div class="font-bold text-orange-600">$<%= tour.price %></div>
                <div class="text-xs text-gray-500">per person</div>
            </div>
            <a href="#booking" class="flex-1 bg-orange-500 hover:bg-orange-600 text-white py-2 rounded-lg text-center">
                Book Now
            </a>
            <button onclick="window.openCustomizeModal()" class="px-3 bg-orange-100 text-orange-600 rounded-lg flex items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                </svg>
            </button>
        </div>
    </div>

    <!-- Simple Customization Modal -->
    <div id="customizeModal" class="fixed inset-0 bg-black/50 z-40 hidden">
        <div class="min-h-screen flex items-center justify-center p-4">
            <div class="bg-white w-full max-w-md rounded-lg shadow-lg">
                <div class="p-6">
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-xl font-bold">Customize This Tour</h3>
                        <button onclick="window.closeCustomizeModal()" class="text-gray-400 hover:text-gray-600">
                            <svg class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>
                    
                    <form id="customizeForm" class="space-y-4">
                        <input type="hidden" name="tourId" value="<%= tour._id %>">
                        <input type="hidden" name="tourName" value="<%= tour.title %>">
                        
                        <div>
                            <label for="customName" class="block text-sm font-medium text-gray-700 mb-1">Your Name*</label>
                            <input type="text" id="customName" name="customName" required
                                  class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-orange-500/30 focus:border-orange-500">
                        </div>
                        
                        <div>
                            <label for="customEmail" class="block text-sm font-medium text-gray-700 mb-1">Email*</label>
                            <input type="email" id="customEmail" name="customEmail" required
                                  class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-orange-500/30 focus:border-orange-500">
                        </div>
                        
                        <div class="mb-3">
                            <label class="block text-sm font-medium text-gray-700 mb-2">What would you like to customize?</label>
                            <div class="space-y-2">
                                <div class="flex items-start">
                                    <input type="checkbox" id="custom_duration" name="customizations" value="Duration" 
                                        class="mt-1 h-4 w-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500">
                                    <label for="custom_duration" class="ml-2 text-sm text-gray-600">
                                        Tour duration
                                    </label>
                                </div>
                                <div class="flex items-start">
                                    <input type="checkbox" id="custom_accommodation" name="customizations" value="Accommodation"
                                        class="mt-1 h-4 w-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500">
                                    <label for="custom_accommodation" class="ml-2 text-sm text-gray-600">
                                        Accommodation options
                                    </label>
                                </div>
                                <div class="flex items-start">
                                    <input type="checkbox" id="custom_activities" name="customizations" value="Activities"
                                        class="mt-1 h-4 w-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500">
                                    <label for="custom_activities" class="ml-2 text-sm text-gray-600">
                                        Activities/experiences
                                    </label>
                                </div>
                                <div class="flex items-start">
                                    <input type="checkbox" id="custom_itinerary" name="customizations" value="Full itinerary"
                                        class="mt-1 h-4 w-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500">
                                    <label for="custom_itinerary" class="ml-2 text-sm text-gray-600">
                                        Create full custom itinerary
                                    </label>
                                </div>
                            </div>
                        </div>
                        
                        <div>
                            <label for="customDate" class="block text-sm font-medium text-gray-700 mb-1">Preferred Travel Date (optional)</label>
                            <input type="date" id="customDate" name="customDate"
                                  class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-orange-500/30 focus:border-orange-500">
                        </div>
                        
                        <div>
                            <label for="customBudget" class="block text-sm font-medium text-gray-700 mb-1">Budget Range (optional)</label>
                            <select id="customBudget" name="customBudget"
                                   class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-orange-500/30 focus:border-orange-500">
                                <option value="">Select a budget range</option>
                                <option value="Economy">Economy (up to $800 per person)</option>
                                <option value="Standard">Standard ($800-1500 per person)</option>
                                <option value="Premium">Premium ($1500-3000 per person)</option>
                                <option value="Luxury">Luxury (above $3000 per person)</option>
                            </select>
                        </div>
                        
                        <div>
                            <label for="customMessage" class="block text-sm font-medium text-gray-700 mb-1">Additional Details*</label>
                            <textarea id="customMessage" name="customMessage" rows="4" required
                                     class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-orange-500/30 focus:border-orange-500"
                                     placeholder="Please tell us more about your requirements..."></textarea>
                        </div>
                        
                        <button type="submit" class="w-full bg-orange-500 hover:bg-orange-600 text-white py-2 rounded-lg transition-colors">
                            Send Request
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Payment Modal -->
    <div id="payment-modal" class="fixed inset-0 z-50 hidden overflow-y-auto">
        <div class="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center">
            <div class="fixed inset-0 transition-opacity">
                <div class="absolute inset-0 bg-gray-900 opacity-75"></div>
            </div>
            <div class="inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6">
                <div class="sm:flex sm:items-start">
                    <div class="mt-3 text-center sm:mt-0 sm:text-left w-full">
                        <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4" id="payment-modal-title">
                            Complete Your Booking
                        </h3>
                        <div class="mt-2">
                            <div class="bg-gray-50 p-4 rounded-lg mb-4">
                                <p class="text-sm text-gray-500" id="payment-modal-message">
                                    Please complete your payment to confirm your reservation.
                                </p>
                                
                                <div class="mt-3 border-t border-gray-200 pt-3">
                                    <div class="flex justify-between text-sm">
                                        <span class="font-medium">Tour:</span>
                                        <span id="payment-tour-title"></span>
                                    </div>
                                    <div class="flex justify-between text-sm mt-1">
                                        <span class="font-medium">Booking Reference:</span>
                                        <span id="payment-booking-id"></span>
                                    </div>
                                    <div class="flex justify-between text-sm mt-1">
                                        <span class="font-medium">Customer:</span>
                                        <span id="payment-customer-name"></span>
                                    </div>
                                    <div class="flex justify-between text-sm mt-1 font-medium">
                                        <span>Total Amount:</span>
                                        <span id="payment-total-amount" class="text-orange-600"></span>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- PayPal Buttons Container -->
                            <div id="paypal-button-container" class="mt-4"></div>
                            
                            <!-- Loading Indicator (hidden by default) -->
                            <div id="payment-loading" class="hidden text-center py-4">
                                <div class="inline-flex items-center px-4 py-2 font-semibold leading-6 text-sm rounded-md text-white bg-orange-500 transition ease-in-out duration-150">
                                    <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                    </svg>
                                    Processing your payment...
                                </div>
                            </div>
                            
                            <!-- Payment Success Message (hidden by default) -->
                            <div id="payment-success" class="hidden text-center py-4">
                                <div class="rounded-full bg-green-100 h-12 w-12 flex items-center justify-center mx-auto mb-4">
                                    <svg class="h-6 w-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                    </svg>
                                </div>
                                <h3 class="text-lg font-medium text-gray-900 mb-2">Payment Successful!</h3>
                                <p class="text-sm text-gray-600 mb-4">Your booking has been confirmed.</p>
                                <p class="text-sm font-medium text-gray-800 mb-1">Confirmation Code: <span id="confirmation-code" class="text-orange-600"></span></p>
                                <p class="text-sm text-gray-600 mb-4">Please save this code for your records.</p>
                                
                                <a id="whatsapp-confirmation-link" href="#" target="_blank" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                                    <svg class="h-5 w-5 mr-2" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
                                        <path d="M380.9 97.1C339 55.1 283.2 32 223.9 32c-122.4 0-222 99.6-222 222 0 39.1 10.2 77.3 29.6 111L0 480l117.7-30.9c32.4 17.7 68.9 27 106.1 27h.1c122.3 0 224.1-99.6 224.1-222 0-59.3-25.2-115-67.1-157zm-157 341.6c-33.2 0-65.7-8.9-94-25.7l-6.7-4-69.8 18.3L72 359.2l-4.4-7c-18.5-29.4-28.2-63.3-28.2-98.2 0-101.7 82.8-184.5 184.6-184.5 49.3 0 95.6 19.2 130.4 54.1 34.8 34.9 56.2 81.2 56.1 130.5 0 101.8-84.9 184.6-186.6 184.6zm101.2-138.2c-5.5-2.8-32.8-16.2-37.9-18-5.1-1.9-8.8-2.8-12.5 2.8-3.7 5.6-14.3 18-17.6 21.8-3.2 3.7-6.5 4.2-12 1.4-32.6-16.3-54-29.1-75.5-66-5.7-9.8 5.7-9.1 16.3-30.3 1.8-3.7.9-6.9-.5-9.7-1.4-2.8-12.5-30.1-17.1-41.2-4.5-10.8-9.1-9.3-12.5-9.5-3.2-.2-6.9-.2-10.6-.2-3.7 0-9.7 1.4-14.8 6.9-5.1 5.6-19.4 19-19.4 46.3 0 27.3 19.9 53.7 22.6 57.4 2.8 3.7 39.1 59.7 94.8 83.8 35.2 15.2 49 16.5 66.6 13.9 10.7-1.6 32.8-13.4 37.4-26.4 4.6-13 4.6-24.1 3.2-26.4-1.3-2.5-5-3.9-10.5-6.6z"/>
                                    </svg>
                                    Confirm via WhatsApp
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
                    <button type="button" onclick="closePaymentModal()" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 sm:mt-0 sm:w-auto sm:text-sm">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/footer') %>

    <!-- Scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js"></script>
    <!-- PayPal SDK -->
    <script src="https://www.paypal.com/sdk/js?client-id=<%= process.env.PAYPAL_CLIENT_ID %>&currency=USD"></script>
    <script>
        // Modal functions - Moved outside DOMContentLoaded to make them globally available
        window.openCustomizeModal = function() {
            document.getElementById('customizeModal').classList.remove('hidden');
            document.body.style.overflow = 'hidden';
        }
        
        window.closeCustomizeModal = function() {
            document.getElementById('customizeModal').classList.add('hidden');
            document.body.style.overflow = '';
        }
        
        // Payment modal functions
        window.showPaymentModal = function(bookingData) {
            // Store booking ID for PayPal
            window.currentBookingId = bookingData.bookingId;
            
            // Update modal with booking details
            document.getElementById('payment-tour-title').textContent = bookingData.tourTitle;
            document.getElementById('payment-booking-id').textContent = bookingData.bookingId;
            document.getElementById('payment-customer-name').textContent = bookingData.customerName;
            document.getElementById('payment-total-amount').textContent = `$${bookingData.finalPrice}`;
            
            // Show the modal
            document.getElementById('payment-modal').classList.remove('hidden');
            document.body.style.overflow = 'hidden';
            
            // Initialize PayPal buttons
            initPayPalButtons(bookingData.finalPrice);
        }
        
        window.closePaymentModal = function() {
            document.getElementById('payment-modal').classList.add('hidden');
            document.body.style.overflow = '';
        }
        
        // Initialize PayPal buttons
        function initPayPalButtons(amount) {
            // Clear any existing buttons
            document.getElementById('paypal-button-container').innerHTML = '';
            
            paypal.Buttons({
                // Set up the transaction
                createOrder: function(data, actions) {
                    // Show loading
                    document.getElementById('payment-loading').classList.remove('hidden');
                    document.getElementById('paypal-button-container').classList.add('hidden');
                    
                    // Call server to create the order
                    return fetch('/booking/create-paypal-order', {
                        method: 'post',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            bookingId: window.currentBookingId
                        })
                    })
                    .then(function(res) {
                        return res.json();
                    })
                    .then(function(orderData) {
                        // Hide loading
                        document.getElementById('payment-loading').classList.add('hidden');
                        document.getElementById('paypal-button-container').classList.remove('hidden');
                        
                        if (orderData.success) {
                            return orderData.orderId;
                        } else {
                            console.error('Error creating order:', orderData);
                            throw new Error(orderData.message || 'Error creating PayPal order');
                        }
                    });
                },
                
                // Finalize the transaction
                onApprove: function(data, actions) {
                    // Show loading
                    document.getElementById('payment-loading').classList.remove('hidden');
                    document.getElementById('paypal-button-container').classList.add('hidden');
                    
                    // Call server to finalize transaction
                    return fetch('/booking/capture-paypal-payment', {
                        method: 'post',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            orderID: data.orderID,
                            bookingId: window.currentBookingId
                        })
                    })
                    .then(function(res) {
                        return res.json();
                    })
                    .then(function(captureData) {
                        // Hide loading
                        document.getElementById('payment-loading').classList.add('hidden');
                        
                        if (captureData.success) {
                            // Show success view
                            document.getElementById('payment-success').classList.remove('hidden');
                            
                            // Update confirmation code and WhatsApp link
                            document.getElementById('confirmation-code').textContent = captureData.confirmationCode;
                            document.getElementById('whatsapp-confirmation-link').href = captureData.whatsappLink;
                            
                            return captureData;
                        } else {
                            console.error('Error capturing payment:', captureData);
                            throw new Error(captureData.message || 'Error processing payment');
                        }
                    });
                },
                
                // Handle errors
                onError: function(err) {
                    console.error('PayPal error:', err);
                    // Hide loading
                    document.getElementById('payment-loading').classList.add('hidden');
                    document.getElementById('paypal-button-container').classList.remove('hidden');
                    // Show error message
                    alert('There was an error processing your payment. Please try again or contact customer support.');
                }
            }).render('#paypal-button-container');
        }
        
        // Show all photos function - Also moved outside
        window.showAllPhotos = function() {
            document.querySelector('[data-lightbox="tour-gallery"]').click();
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            // Handle main booking form submission
            const bookingForm = document.getElementById('booking-form');
            if (bookingForm) {
                // Price calculation variables
                const basePricePerPerson = parseFloat('<%= tour.price %>');
                const discountRate = 0.09; // 9% discount per additional person
                
                // Price calculation function
                function calculatePrice() {
                    const numGuests = parseInt(document.getElementById('groupSize').value) || 1;
                    let totalPrice = basePricePerPerson * numGuests;
                    let discount = 0;
                    
                    // Apply discount for more than 1 guest
                    if (numGuests > 1) {
                        // Calculate discount - 9% per additional person
                        discount = basePricePerPerson * (numGuests - 1) * discountRate;
                        document.getElementById('discount-container').style.display = 'flex';
                    } else {
                        document.getElementById('discount-container').style.display = 'none';
                    }
                    
                    // Update discount display
                    document.getElementById('discount-amount').textContent = `-$${discount.toFixed(2)}`;
                    
                    // Calculate final price
                    totalPrice -= discount;
                    
                    // Update total price display
                    document.getElementById('total-price').textContent = `$${totalPrice.toFixed(2)}`;
                    
                    // Update hidden input with calculated price
                    document.getElementById('calculated-price').value = totalPrice.toFixed(2);
                    
                    return totalPrice;
                }
                
                // Set up event listener for group size changes
                document.getElementById('groupSize').addEventListener('input', calculatePrice);
                
                // Initial calculation
                calculatePrice();
                
                // Form submission handler
                bookingForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    // Get form data
                    const formData = new FormData(bookingForm);
                    const formObject = {};
                    formData.forEach((value, key) => {
                        formObject[key] = value;
                    });
                    
                    // Show loading state
                    const submitBtn = document.getElementById('booking-submit-btn');
                    const originalBtnText = submitBtn.innerHTML;
                    submitBtn.disabled = true;
                    submitBtn.innerHTML = '<span class="inline-flex items-center"><svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Processing...</span>';
                    
                    // Hide any existing messages
                    document.getElementById('booking-success').classList.add('hidden');
                    document.getElementById('booking-error').classList.add('hidden');
                    
                    // Send AJAX request
                    fetch('/booking', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            tourId: formObject.tourId,
                            tourName: formObject.tourName,
                            firstName: formObject.firstName,
                            lastName: formObject.lastName,
                            email: formObject.email,
                            phone: formObject.phone,
                            startDate: formObject.startDate,
                            groupSize: parseInt(formObject.groupSize),
                            calculatedPrice: formObject.calculatedPrice,
                            specialRequests: formObject.specialRequests
                        })
                    })
                    .then(response => {
                        // Check if the response is a redirect
                        if (response.redirected) {
                            window.location.href = response.url;
                            return Promise.reject("Redirecting...");
                        }
                        
                        // Try to parse as JSON, but also handle non-JSON responses
                        const contentType = response.headers.get("content-type");
                        if (contentType && contentType.includes("application/json")) {
                            return response.json();
                        } else {
                            // For non-JSON responses (like HTML), show a success message
                            // since the server would redirect on success and we'd never get here on error
                            const successElement = document.getElementById('booking-success');
                            const successMessage = document.getElementById('booking-success-message');
                            successMessage.textContent = 'Your booking has been submitted successfully!';
                            successElement.classList.remove('hidden');
                            bookingForm.reset();
                            
                            return Promise.reject("Non-JSON response received, likely successful");
                        }
                    })
                    .then(data => {
                        if (data.success) {
                            if (data.paymentPending) {
                                // Show payment modal instead of success message
                                showPaymentModal(data);
                            } else {
                                // Show success message
                                const successElement = document.getElementById('booking-success');
                                const successMessage = document.getElementById('booking-success-message');
                                successMessage.textContent = data.message || 'Your booking has been submitted successfully!';
                                successElement.classList.remove('hidden');
                                
                                // Clear form
                                bookingForm.reset();
                                
                                // Scroll to success message
                                successElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
                                
                                // Enable the submit button but change text to "Booked!"
                                submitBtn.disabled = false;
                                submitBtn.innerHTML = '<svg class="w-5 h-5 mr-2 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>Booked!';
                                submitBtn.classList.remove('bg-orange-500', 'hover:bg-orange-600');
                                submitBtn.classList.add('bg-green-500', 'hover:bg-green-600');
                                
                                // Store booking in localStorage to prevent duplicate submissions
                                localStorage.setItem('last_booking', JSON.stringify({
                                    tourId: formObject.tourId,
                                    email: formObject.email,
                                    date: new Date().toISOString(),
                                    bookingId: data.bookingId
                                }));
                            }
                        } else {
                            // Show error message
                            const errorElement = document.getElementById('booking-error');
                            const errorMessage = document.getElementById('booking-error-message');
                            errorMessage.textContent = data.message || 'An error occurred. Please try again.';
                            errorElement.classList.remove('hidden');
                            
                            // Restore submit button
                            submitBtn.disabled = false;
                            submitBtn.innerHTML = originalBtnText;
                            
                            // Scroll to error message
                            errorElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
                        }
                    })
                    .catch(error => {
                        // Check if this is our redirect message
                        if (error === "Redirecting..." || error === "Non-JSON response received, likely successful") {
                            console.log(error);
                            return; // Don't show error for redirects or non-JSON success
                        }
                        
                        console.error('Error submitting booking:', error);
                        
                        // Show error message
                        const errorElement = document.getElementById('booking-error');
                        const errorMessage = document.getElementById('booking-error-message');
                        errorMessage.textContent = 'Network error. Please try again or contact us directly.';
                        errorElement.classList.remove('hidden');
                        
                        // Restore submit button
                        submitBtn.disabled = false;
                        submitBtn.innerHTML = originalBtnText;
                    });
                });
            }

            // First-time visitor notification - only triggers once per user across the entire site
            function checkFirstTimeVisitor() {
                if (!localStorage.getItem('mte_visited')) {
                    // Set flag in localStorage with a timestamp to indicate this user has visited the site
                    localStorage.setItem('mte_visited', new Date().toISOString());
                    
                    // Collect user information
                    const userInfo = {
                        browser: navigator.userAgent,
                        language: navigator.language,
                        screenSize: `${window.screen.width}x${window.screen.height}`,
                        viewportSize: `${window.innerWidth}x${window.innerHeight}`,
                        referrer: document.referrer || 'Direct visit',
                        tour: '<%= tour.title %>',
                        tourPrice: '$<%= tour.price %>',
                        tourDuration: '<%= tour.duration %> days'
                    };
                    
                    // Send visitor information to server for WhatsApp notification
                    fetch('/visitor-notification', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(userInfo)
                    })
                    .then(response => response.json())
                    .then(data => console.log('Visitor notification handled by server'))
                    .catch(error => console.error('Error sending visitor notification:', error));
                }
            }
            
            // Call the function to check first-time visitor
            checkFirstTimeVisitor();
            
            // Navigation highlighting
            const sections = document.querySelectorAll('section[id]');
            const navLinks = document.querySelectorAll('.nav-link');
            
            function highlightNav() {
                const scrollY = window.scrollY;
                sections.forEach(section => {
                    const sectionTop = section.offsetTop - 100;
                    const sectionHeight = section.offsetHeight;
                    const sectionId = section.getAttribute('id');
                    
                    if (scrollY >= sectionTop && scrollY < sectionTop + sectionHeight) {
                        navLinks.forEach(link => {
                            link.classList.remove('text-orange-500', 'font-medium');
                            if (link.getAttribute('href') === `#${sectionId}`) {
                                link.classList.add('text-orange-500', 'font-medium');
                            }
                        });
                    }
                });
            }
            
            window.addEventListener('scroll', highlightNav);
            highlightNav();
            
            // Lightbox initialization
            lightbox.option({
                'resizeDuration': 200,
                'wrapAround': true,
                'disableScrolling': true
            });
            
            // Close modal on Escape key
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    closeCustomizeModal();
                }
            });
            
            // Form validation and submission
            document.getElementById('customizeForm').addEventListener('submit', function(e) {
                e.preventDefault();
                
                const form = this;
                const formData = new FormData(form);
                const formObject = {};
                
                formData.forEach((value, key) => {
                    // Handle checkboxes (multiple values for same name)
                    if (key === 'customizations') {
                        if (!formObject[key]) {
                            formObject[key] = [];
                        }
                        formObject[key].push(value);
                    } else {
                        formObject[key] = value;
                    }
                });
                
                // Add some debugging logs
                console.log('Sending form data:', formObject);
                
                // Add customizations field if it's missing
                if (!formObject.customizations || formObject.customizations.length === 0) {
                    formObject.customizations = ['Custom itinerary request'];
                }
                
                // Show loading state
                const submitBtn = form.querySelector('button[type="submit"]');
                const originalBtnText = submitBtn.innerHTML;
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="inline-flex items-center"><svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Sending...</span>';
                
                // Send form data - using the correct endpoint
                fetch('/booking/custom-request', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formObject)
                })
                .then(response => {
                    console.log('Response status:', response.status);
                    return response.json();
                })
                .then(data => {
                    console.log('Response data:', data);
                    if (data.success) {
                        // For non-JSON responses (like HTML), show a success message
                        // since the server would redirect on success and we'd never get here on error
                        const successElement = document.getElementById('booking-success');
                        const successMessage = document.getElementById('booking-success-message');
                        successMessage.textContent = 'Your booking has been submitted successfully!';
                        successElement.classList.remove('hidden');
                        bookingForm.reset();
                        
                        return Promise.reject("Non-JSON response received, likely successful");
                    } else {
                        submitBtn.disabled = false;
                        submitBtn.innerHTML = originalBtnText;
                        alert(data.message || 'Something went wrong. Please try again or contact us directly.');
                    }
                })
                .catch(error => {
                    console.error('Error submitting form:', error);
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = originalBtnText;
                    alert('Network error. Please try again or contact us directly.');
                });
            });
            
            // Remove client-side WhatsApp notification since it's now handled server-side
            // The booking form will submit normally with the server handling the notification
        });
    </script>
</body>
</html> 